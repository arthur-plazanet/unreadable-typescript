{
  "name": "unreadable-typescript",
  "version": "1.0.3",
  "private": false,
  "description": "type UnreadableType<T> = T extends object ? { [K in keyof T]: UnreadableType<T[K]> } : T;",
  "repository": {
    "type": "git",
    "url": "https://github.com/arthur-plazanet/unreadable-typescript"
  },
  "main": "dist/index.js",
  "module": "dist/index.mjs",
  "types": "dist/index.d.ts",
  "files": [
    "dist",
    "!**/*.map"
  ],
  "exports": {
    ".": "./dist/index.js",
    "./enum": "./dist/enum/index.js",
    "./interface": "./dist/interface/index.js"
  },
  "scripts": {
    "build": "tsup",
    "dev": "tsup --watch",
    "test": "vitest run",
    "test:watch": "vitest"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "tsup": "8.5.0",
    "typescript": "5.9.2",
    "vitest": "3.2.4"
  },
  "publishConfig": {
    "access": "public"
  }
}
